/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


#import "TActivity.h"

@implementation TActivity

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithActivityBase: (NSMutableDictionary *) activityBase activityCommunities: (NSMutableArray *) activityCommunities
{
  self = [super init];
  __activityBase = [activityBase retain_stub];
  __activityBase_isset = YES;
  __activityCommunities = [activityCommunities retain_stub];
  __activityCommunities_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"activityBase"])
  {
    __activityBase = [[decoder decodeObjectForKey: @"activityBase"] retain_stub];
    __activityBase_isset = YES;
  }
  if ([decoder containsValueForKey: @"activityCommunities"])
  {
    __activityCommunities = [[decoder decodeObjectForKey: @"activityCommunities"] retain_stub];
    __activityCommunities_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__activityBase_isset)
  {
    [encoder encodeObject: __activityBase forKey: @"activityBase"];
  }
  if (__activityCommunities_isset)
  {
    [encoder encodeObject: __activityCommunities forKey: @"activityCommunities"];
  }
}

- (void) dealloc
{
  [__activityBase release_stub];
  [__activityCommunities release_stub];
  [super dealloc_stub];
}

- (NSMutableDictionary *) activityBase {
  return [[__activityBase retain_stub] autorelease_stub];
}

- (void) setActivityBase: (NSMutableDictionary *) activityBase {
  [activityBase retain_stub];
  [__activityBase release_stub];
  __activityBase = activityBase;
  __activityBase_isset = YES;
}

- (BOOL) activityBaseIsSet {
  return __activityBase_isset;
}

- (void) unsetActivityBase {
  [__activityBase release_stub];
  __activityBase = nil;
  __activityBase_isset = NO;
}

- (NSMutableArray *) activityCommunities {
  return [[__activityCommunities retain_stub] autorelease_stub];
}

- (void) setActivityCommunities: (NSMutableArray *) activityCommunities {
  [activityCommunities retain_stub];
  [__activityCommunities release_stub];
  __activityCommunities = activityCommunities;
  __activityCommunities_isset = YES;
}

- (BOOL) activityCommunitiesIsSet {
  return __activityCommunities_isset;
}

- (void) unsetActivityCommunities {
  [__activityCommunities release_stub];
  __activityCommunities = nil;
  __activityCommunities_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_MAP) {
          int _size0;
          [inProtocol readMapBeginReturningKeyType: NULL valueType: NULL size: &_size0];
          NSMutableDictionary * fieldValue = [[NSMutableDictionary alloc] initWithCapacity: _size0];
          int _i1;
          for (_i1 = 0; _i1 < _size0; ++_i1)
          {
            NSString * _key2 = [inProtocol readString];
            NSString * _val3 = [inProtocol readString];
            [fieldValue setObject: _val3 forKey: _key2];
          }
          [inProtocol readMapEnd];
          [self setActivityBase: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_LIST) {
          int _size4;
          [inProtocol readListBeginReturningElementType: NULL size: &_size4];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size4];
          int _i5;
          for (_i5 = 0; _i5 < _size4; ++_i5)
          {
            int _size7;
            [inProtocol readMapBeginReturningKeyType: NULL valueType: NULL size: &_size7];
            NSMutableDictionary * _elem6 = [[NSMutableDictionary alloc] initWithCapacity: _size7];
            int _i8;
            for (_i8 = 0; _i8 < _size7; ++_i8)
            {
              NSString * _key9 = [inProtocol readString];
              int32_t _val10 = [inProtocol readI32];
              [_elem6 setObject: [NSNumber numberWithLong: _val10] forKey: _key9];
            }
            [inProtocol readMapEnd];
            [fieldValue addObject: _elem6];
            [_elem6 release_stub];
          }
          [inProtocol readListEnd];
          [self setActivityCommunities: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"TActivity"];
  if (__activityBase_isset) {
    if (__activityBase != nil) {
      [outProtocol writeFieldBeginWithName: @"activityBase" type: TType_MAP fieldID: 1];
      {
        [outProtocol writeMapBeginWithKeyType: TType_STRING valueType: TType_STRING size: [__activityBase count]];
        NSEnumerator * _iter11 = [__activityBase keyEnumerator];
        id key12;
        while ((key12 = [_iter11 nextObject]))
        {
          [outProtocol writeString: key12];
          [outProtocol writeString: [__activityBase objectForKey: key12]];
        }
        [outProtocol writeMapEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__activityCommunities_isset) {
    if (__activityCommunities != nil) {
      [outProtocol writeFieldBeginWithName: @"activityCommunities" type: TType_LIST fieldID: 2];
      {
        [outProtocol writeListBeginWithElementType: TType_MAP size: [__activityCommunities count]];
        int idx14;
        for (idx14 = 0; idx14 < [__activityCommunities count]; idx14++)
        {
          {
            [outProtocol writeMapBeginWithKeyType: TType_STRING valueType: TType_I32 size: [[__activityCommunities objectAtIndex: idx14] count]];
            NSEnumerator * _iter15 = [[__activityCommunities objectAtIndex: idx14] keyEnumerator];
            id key16;
            while ((key16 = [_iter15 nextObject]))
            {
              [outProtocol writeString: key16];
              [outProtocol writeI32: [[[__activityCommunities objectAtIndex: idx14] objectForKey: key16] longValue]];
            }
            [outProtocol writeMapEnd];
          }
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"TActivity("];
  [ms appendString: @"activityBase:"];
  [ms appendFormat: @"%@", __activityBase];
  [ms appendString: @",activityCommunities:"];
  [ms appendFormat: @"%@", __activityCommunities];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


@implementation TActivityConstants
+ (void) initialize {
}
@end

