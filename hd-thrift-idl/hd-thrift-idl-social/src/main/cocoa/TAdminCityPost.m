/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


#import "TAdminCityPost.h"

@implementation TAdminCityPost

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithId: (int32_t) id postId: (int32_t) postId cityId: (int32_t) cityId communityId: (int32_t) communityId
{
  self = [super init];
  __id = id;
  __id_isset = YES;
  __postId = postId;
  __postId_isset = YES;
  __cityId = cityId;
  __cityId_isset = YES;
  __communityId = communityId;
  __communityId_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"id"])
  {
    __id = [decoder decodeInt32ForKey: @"id"];
    __id_isset = YES;
  }
  if ([decoder containsValueForKey: @"postId"])
  {
    __postId = [decoder decodeInt32ForKey: @"postId"];
    __postId_isset = YES;
  }
  if ([decoder containsValueForKey: @"cityId"])
  {
    __cityId = [decoder decodeInt32ForKey: @"cityId"];
    __cityId_isset = YES;
  }
  if ([decoder containsValueForKey: @"communityId"])
  {
    __communityId = [decoder decodeInt32ForKey: @"communityId"];
    __communityId_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__id_isset)
  {
    [encoder encodeInt32: __id forKey: @"id"];
  }
  if (__postId_isset)
  {
    [encoder encodeInt32: __postId forKey: @"postId"];
  }
  if (__cityId_isset)
  {
    [encoder encodeInt32: __cityId forKey: @"cityId"];
  }
  if (__communityId_isset)
  {
    [encoder encodeInt32: __communityId forKey: @"communityId"];
  }
}

- (void) dealloc
{
  [super dealloc_stub];
}

- (int32_t) id {
  return __id;
}

- (void) setId: (int32_t) id {
  __id = id;
  __id_isset = YES;
}

- (BOOL) idIsSet {
  return __id_isset;
}

- (void) unsetId {
  __id_isset = NO;
}

- (int32_t) postId {
  return __postId;
}

- (void) setPostId: (int32_t) postId {
  __postId = postId;
  __postId_isset = YES;
}

- (BOOL) postIdIsSet {
  return __postId_isset;
}

- (void) unsetPostId {
  __postId_isset = NO;
}

- (int32_t) cityId {
  return __cityId;
}

- (void) setCityId: (int32_t) cityId {
  __cityId = cityId;
  __cityId_isset = YES;
}

- (BOOL) cityIdIsSet {
  return __cityId_isset;
}

- (void) unsetCityId {
  __cityId_isset = NO;
}

- (int32_t) communityId {
  return __communityId;
}

- (void) setCommunityId: (int32_t) communityId {
  __communityId = communityId;
  __communityId_isset = YES;
}

- (BOOL) communityIdIsSet {
  return __communityId_isset;
}

- (void) unsetCommunityId {
  __communityId_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPostId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setCityId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setCommunityId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"TAdminCityPost"];
  if (__id_isset) {
    [outProtocol writeFieldBeginWithName: @"id" type: TType_I32 fieldID: 1];
    [outProtocol writeI32: __id];
    [outProtocol writeFieldEnd];
  }
  if (__postId_isset) {
    [outProtocol writeFieldBeginWithName: @"postId" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __postId];
    [outProtocol writeFieldEnd];
  }
  if (__cityId_isset) {
    [outProtocol writeFieldBeginWithName: @"cityId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __cityId];
    [outProtocol writeFieldEnd];
  }
  if (__communityId_isset) {
    [outProtocol writeFieldBeginWithName: @"communityId" type: TType_I32 fieldID: 4];
    [outProtocol writeI32: __communityId];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"TAdminCityPost("];
  [ms appendString: @"id:"];
  [ms appendFormat: @"%i", __id];
  [ms appendString: @",postId:"];
  [ms appendFormat: @"%i", __postId];
  [ms appendString: @",cityId:"];
  [ms appendFormat: @"%i", __cityId];
  [ms appendString: @",communityId:"];
  [ms appendFormat: @"%i", __communityId];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


@implementation TAdminCityPostConstants
+ (void) initialize {
}
@end

