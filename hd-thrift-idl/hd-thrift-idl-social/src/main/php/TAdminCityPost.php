<?php
namespace ;

/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


/**
 * 城市帖子关联信息
 * 
 * @since 0.0.1
 * @author zhijian.li
 * @date 2015年11月30日 下午2:40:30
 * 
 */
class TAdminCityPost {
  static $_TSPEC;

  /**
   * 主键id
   * 
   * @var int
   */
  public $id = null;
  /**
   * 帖子id
   * 
   * @var int
   */
  public $postId = null;
  /**
   * 城市id
   * 
   * @var int
   */
  public $cityId = null;
  /**
   * 小区id
   * 
   * @var int
   */
  public $communityId = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'postId',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'cityId',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'communityId',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['id'])) {
        $this->id = $vals['id'];
      }
      if (isset($vals['postId'])) {
        $this->postId = $vals['postId'];
      }
      if (isset($vals['cityId'])) {
        $this->cityId = $vals['cityId'];
      }
      if (isset($vals['communityId'])) {
        $this->communityId = $vals['communityId'];
      }
    }
  }

  public function getName() {
    return 'TAdminCityPost';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->postId);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->cityId);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->communityId);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('TAdminCityPost');
    if ($this->id !== null) {
      $xfer += $output->writeFieldBegin('id', TType::I32, 1);
      $xfer += $output->writeI32($this->id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->postId !== null) {
      $xfer += $output->writeFieldBegin('postId', TType::I32, 2);
      $xfer += $output->writeI32($this->postId);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->cityId !== null) {
      $xfer += $output->writeFieldBegin('cityId', TType::I32, 3);
      $xfer += $output->writeI32($this->cityId);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->communityId !== null) {
      $xfer += $output->writeFieldBegin('communityId', TType::I32, 4);
      $xfer += $output->writeI32($this->communityId);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}


