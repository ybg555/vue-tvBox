//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_args = function(args) {
  this.post = null;
  this.cityPosts = null;
  if (args) {
    if (args.post !== undefined) {
      this.post = args.post;
    }
    if (args.cityPosts !== undefined) {
      this.cityPosts = args.cityPosts;
    }
  }
};
ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_args.prototype = {};
ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.post = new TAdminPost();
        this.post.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.cityPosts = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new TAdminCityPost();
          elem14.read(input);
          this.cityPosts.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_args.prototype.write = function(output) {
  output.writeStructBegin('ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_args');
  if (this.post !== null && this.post !== undefined) {
    output.writeFieldBegin('post', Thrift.Type.STRUCT, 1);
    this.post.write(output);
    output.writeFieldEnd();
  }
  if (this.cityPosts !== null && this.cityPosts !== undefined) {
    output.writeFieldBegin('cityPosts', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.cityPosts.length);
    for (var iter15 in this.cityPosts)
    {
      if (this.cityPosts.hasOwnProperty(iter15))
      {
        iter15 = this.cityPosts[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_result.prototype = {};
ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_result.prototype.write = function(output) {
  output.writeStructBegin('ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ISocialAdminServiceAddAdminPostUseMobileClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
ISocialAdminServiceAddAdminPostUseMobileClient.prototype = {};
ISocialAdminServiceAddAdminPostUseMobileClient.prototype.addAdminPostUseMobile = function(post, cityPosts, callback) {
  this.send_addAdminPostUseMobile(post, cityPosts, callback); 
  if (!callback) {
    return this.recv_addAdminPostUseMobile();
  }
};

ISocialAdminServiceAddAdminPostUseMobileClient.prototype.send_addAdminPostUseMobile = function(post, cityPosts, callback) {
  this.output.writeMessageBegin('addAdminPostUseMobile', Thrift.MessageType.CALL, this.seqid);
  var args = new ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_args();
  args.post = post;
  args.cityPosts = cityPosts;
  args.write(this.output);
  this.output.writeMessageEnd();
  if (callback) {
    var self = this;
    this.output.getTransport().flush(true, function() {
      var result = null;
      try {
        result = self.recv_addAdminPostUseMobile();
      } catch (e) {
        result = e;
      }
      callback(result);
    });
  } else {
    return this.output.getTransport().flush();
  }
};

ISocialAdminServiceAddAdminPostUseMobileClient.prototype.recv_addAdminPostUseMobile = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new ISocialAdminServiceAddAdminPostUseMobile_addAdminPostUseMobile_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'addAdminPostUseMobile failed: unknown result';
};
